
# # FROM python:3.11-slim


# # WORKDIR /app


# # COPY requirements.txt .


# # RUN pip install --no-cache-dir -r requirements.txt
# # RUN apt-get update && apt-get install -y curl


# # COPY . .


# # EXPOSE 3001

# # CMD ["uvicorn", "server:app", "--host", "0.0.0.0", "--port", "3001"]



# # Definiowanie argumentów (ARG)
# ARG PYTHON_VERSION=3.11-slim
# ARG APP_DIR=/app

# # Etap 1: Budowanie zależności (Builder)
# FROM python:${PYTHON_VERSION} as builder

# # Ustawienie katalogu roboczego
# WORKDIR ${APP_DIR}

# # Skopiowanie pliku requirements.txt
# COPY requirements.txt .

# # Instalowanie zależności do katalogu /install, bez pamięci cache
# RUN pip install --no-cache-dir --prefix=/install -r requirements.txt

# # Etap 2: Finalny obraz (aplikacja)
# FROM python:${PYTHON_VERSION}

# # Ustawienie katalogu roboczego
# WORKDIR ${APP_DIR}

# # Kopiowanie zainstalowanych zależności z etapu build
# COPY --from=builder /install /usr/local

# # Kopiowanie reszty aplikacji
# COPY . .

# # Ekspozycja portu, na którym działa aplikacja
# EXPOSE 3001

# # Uruchamianie aplikacji przy użyciu Uvicorn
# CMD ["uvicorn", "server:app", "--host", "0.0.0.0", "--port", "3001"]







# # FROM python:3.11-slim as builder

# # WORKDIR /app

# # COPY requirements.txt .
# # RUN pip install --no-cache-dir --prefix=/install -r requirements.txt

# # FROM python:3.11-slim

# # WORKDIR /app
# # COPY --from=builder /install /usr/local
# # COPY . .

# # EXPOSE 3001

# # CMD ["uvicorn", "server:app", "--host", "0.0.0.0", "--port", "3001", "--reload"]






# FROM node:16-alpine

# WORKDIR /app
# COPY package*.json ./
# RUN npm install --production
# COPY ./server.js .
# COPY ./backend.json .
# EXPOSE 3001
# CMD ["node", "server.js"]


FROM python:3.11-slim

# Ustawienie katalogu roboczego

WORKDIR /app

# Kopiowanie pliku zależności

COPY requirements.txt .

# Instalacja zależności (tylko wymagane biblioteki)

RUN pip install --no-cache-dir -r requirements.txt
RUN apt-get update && apt-get install -y curl

# Skopiowanie całego projektu

COPY . .

# Wystawienie portu (zmień na ten, którego używasz w aplikacji)

EXPOSE 3001

# Komenda do uruchomienia serwera — dostosuj do frameworka:

# Dla Flask:

# CMD \["python", "main.py"]

# Dla FastAPI (Uvicorn):

CMD ["uvicorn", "server:app", "--host", "0.0.0.0", "--port", "3001"]