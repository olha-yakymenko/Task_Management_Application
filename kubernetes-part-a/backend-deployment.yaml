apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: ./kompose convert -o kuber2
    kompose.version: 1.31.2 (a92241f79)
  creationTimestamp: null
  labels:
    io.kompose.service: backend
  name: backend
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: backend
  strategy: {}
  template:
    metadata:
      annotations:
        kompose.cmd: ./kompose convert -o kuber2
        kompose.version: 1.31.2 (a92241f79)
      creationTimestamp: null
      labels:
        io.kompose.network/services-db-network: "true"
        io.kompose.network/services-frontend-network: "true"
        io.kompose.service: backend
    spec:
      containers:
        - env:
            - name: PGDATABASE
              value: tasks
            - name: PGHOST
              value: postgres
            - name: PGPASSWORD_FILE
              value: /run/secrets/pg-password/pg-password
            - name: PGPORT
              value: "5432"
            - name: PGUSER
              value: admin
            - name: PUBLIC_KEY_FILE
              value: /run/secrets/jwt-private-key/jwt-private-key
          image: olhaya/backend:multiarch
          livenessProbe:
            exec:
              command:
                - curl
                - -f
                - http://localhost:3001/health
            failureThreshold: 5
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
          name: backend
          ports:
            - containerPort: 3001
              hostPort: 3001
              protocol: TCP
          resources: {}
          volumeMounts:
            - mountPath: /config/backend-config.env
              name: backend-config
              subPath: backend-config.env
            - mountPath: /run/secrets/pg-password
              name: pg-password
            - mountPath: /run/secrets/jwt-private-key
              name: jwt-private-key
      restartPolicy: Always
      volumes:
        - configMap:
            items:
              - key: backend-config.env
                path: backend-config.env
            name: backend-config
          name: backend-config
        - name: pg-password
          secret:
            items:
              - key: pg-password
                path: pg-password
            secretName: pg-password
        - name: jwt-private-key
          secret:
            items:
              - key: jwt-private-key
                path: jwt-private-key
            secretName: jwt-private-key
status: {}
