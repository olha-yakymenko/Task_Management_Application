apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: ./kompose convert -o kuber2
    kompose.version: 1.31.2 (a92241f79)
  creationTimestamp: null
  labels:
    io.kompose.service: postgres
  name: postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: postgres
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: ./kompose convert -o kuber2
        kompose.version: 1.31.2 (a92241f79)
      creationTimestamp: null
      labels:
        io.kompose.network/services-db-network: "true"
        io.kompose.service: postgres
    spec:
      containers:
        - env:
            - name: POSTGRES_DB
              value: tasks
            - name: POSTGRES_PASSWORD_FILE
              value: /run/secrets/pg-password
            - name: POSTGRES_USER
              value: admin
          image: postgres:16-alpine
          livenessProbe:
            exec:
              command:
                - pg_isready
                - -U
                - admin
                - -d
                - tasks
            failureThreshold: 5
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
          name: postgres
          ports:
            - containerPort: 5432
              hostPort: 5432
              protocol: TCP
          resources: {}
          volumeMounts:
            - mountPath: /run/secrets/pg-password
              name: pg-password
            - mountPath: /var/lib/postgresql/data
              name: postgres-data
      restartPolicy: Always
      volumes:
        - name: pg-password
          secret:
            items:
              - key: pg-password
                path: pg-password
            secretName: pg-password
        - name: postgres-data
          persistentVolumeClaim:
            claimName: postgres-data
status: {}
