# apiVersion: networking.k8s.io/v1
# kind: Ingress
# metadata:
#   name: keycloak-ingress
#   annotations:
#     nginx.ingress.kubernetes.io/rewrite-target: /$2
#     nginx.ingress.kubernetes.io/proxy-pass-headers: "Authorization"
#     nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
# spec:
#   ingressClassName: nginx
#   rules:
#   - host: "localhost"
#     http:
#       paths:
#       - path: /realms
#         pathType: Prefix
#         backend:
#           service:
#             name: keycloak
#             port:
#               number: 8080


# apiVersion: networking.k8s.io/v1
# kind: Ingress
# metadata:
#   name: keycloak-ingress
#   annotations:
#     nginx.ingress.kubernetes.io/rewrite-target: /$2   # Usuwa "/realms" z URL przed przekazaniem
#     nginx.ingress.kubernetes.io/proxy-pass-headers: "Authorization"  # Przekazuje nagłówki, takie jak Authorization
#     nginx.ingress.kubernetes.io/backend-protocol: "HTTP"  # Zapewnia, że komunikacja jest HTTP
# spec:
#   ingressClassName: nginx
#   rules:
#   - host: "localhost"  # Możesz zmienić na domenę, np. frontend.local, jeśli masz to skonfigurowane
#     http:
#       paths:
#       - path: /realms/(.*)  # Dopasowuje ścieżki pod "/realms"
#         pathType: ImplementationSpecific
#         backend:
#           service:
#             name: keycloak
#             port:
#               number: 8080  # Port, na którym działa Keycloak





apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: keycloak
  annotations:
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  ingressClassName: nginx
  rules:
    - host: keycloak.127.0.0.1.nip.io
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: keycloak
                port:
                  number: 8080
