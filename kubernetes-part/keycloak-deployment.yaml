apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -f docker-compose.yaml
    kompose.version: 1.34.0 (HEAD)
  labels:
    io.kompose.service: keycloak
  name: keycloak
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: keycloak
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.yaml
        kompose.version: 1.34.0 (HEAD)
      labels:
        io.kompose.service: keycloak
    spec:
      containers:
        - env:
            - name: KC_ADMIN
              value: admin
            - name: KC_DB
              value: postgres
            - name: KC_DB_PASSWORD
              value: password
            - name: KC_ADMIN_PASSWORD_FILE
              value: /run/secrets/kc-admin-password/password
            - name: KC_DB_URL
              value: jdbc:postgresql://postgres:5432/tasks
            - name: KC_DB_USERNAME
              value: admin
            - name: KC_HOSTNAME
              value: localhost
            - name: KC_HTTP_ENABLED
              value: "true"
            - name: KEYCLOAK_ADMIN
              value: admin
            - name: KC_ADMIN_PASSWORD_FILE
              value: /run/secrets/kc-admin-password/password
          image: olhaya/keycloak:multiarch
          livenessProbe:
            exec:
              command:
                - /opt/keycloak/bin/kc.sh
                - show-config
            failureThreshold: 5
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
          name: keycloak
          ports:
            - containerPort: 8080
              hostPort: 8080
              protocol: TCP
          volumeMounts:
            - mountPath: /opt/keycloak/data
              name: keycloak-data
          resources:
            requests:
              memory: "512Mi"
              cpu: "200m"
            limits:
              memory: "2Gi"
              cpu: "500m"
      restartPolicy: Always
      volumes:
        - name: keycloak-data
          persistentVolumeClaim:
            claimName: keycloak-data
status: {}


